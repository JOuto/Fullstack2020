{"ast":null,"code":"var _jsxFileName = \"/Users/jouni/unicafe/src/index.js\";\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\n\nconst StatisticLine = props => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 3\n    }\n  }, props.text, \" \", props.value, \" \");\n};\n\nconst Statistics = props => {\n  const good = props.good;\n  const bad = props.bad;\n  const neutral = props.neutral;\n  const all = good + bad + neural;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(StatisticLine, {\n    text: \"good\",\n    value: good,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(StatisticLine, {\n    text: \"neutral\",\n    value: neutral,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(StatisticLine, {\n    text: \"bad\",\n    value: bad,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(StatisticLine, {\n    text: \"all\",\n    value: all,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }));\n};\n\nconst Button = props => {\n  const value = props.value;\n  const setValue = props.setValue;\n\n  const handleClick = () => {\n    setValue(value + 1);\n  };\n\n  return /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 3\n    }\n  }, props.text);\n};\n\nconst App = () => {\n  // tallenna napit omaan tilaansa\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    value: good,\n    setValue: setGood,\n    text: \"good\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    value: neutral,\n    setValue: setNeutral,\n    text: \"neutral\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    value: bad,\n    setValue: setBad,\n    text: \"bad\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Statistics, {\n    good: good,\n    neutral: neutral,\n    bad: bad,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }));\n};\n\nReactDOM.render( /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 17\n  }\n}), document.getElementById('root'));","map":{"version":3,"sources":["/Users/jouni/unicafe/src/index.js"],"names":["React","useState","ReactDOM","StatisticLine","props","text","value","Statistics","good","bad","neutral","all","neural","Button","setValue","handleClick","App","setGood","setNeutral","setBad","render","document","getElementById"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport ReactDOM from 'react-dom'\n\n\nconst StatisticLine = (props) => {\n  \n  \n  return(\n  <div>{props.text} {props.value} </div>  \n  )\n}\n\nconst Statistics = (props) => {\n  const good = props.good\n  const bad = props.bad\n  const neutral = props.neutral\n  const all = good + bad + neural\n\n  return(\n    <div>\n      <StatisticLine text=\"good\" value ={good} />\n      <StatisticLine text=\"neutral\" value ={neutral} />\n      <StatisticLine text=\"bad\" value ={bad} />\n      <StatisticLine text=\"all\" value={all}/>\n      \n      \n    </div>\n  )\n}\n\n\nconst Button = (props) => {\n  \n  const value = props.value\n  const setValue = props.setValue\n\n  const handleClick = () => {\n    setValue(value + 1)\n  }\n  \n  return(\n  <button onClick={handleClick}>\n    {props.text}\n  </button>\n)\n  }\nconst App = () => {\n  // tallenna napit omaan tilaansa\n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n\n  \n\n  return (\n    <div>\n      \n      <Button value = {good} setValue = {setGood} text={\"good\"}/>\n      <Button value = {neutral} setValue = {setNeutral} text={\"neutral\"}/>\n      <Button value = {bad} setValue = {setBad} text={\"bad\"}/>\n      <Statistics good={good} neutral= {neutral} bad={bad} />\n    </div>\n  )\n}\n\nReactDOM.render(<App />, \n  document.getElementById('root')\n)"]},"metadata":{},"sourceType":"module"}