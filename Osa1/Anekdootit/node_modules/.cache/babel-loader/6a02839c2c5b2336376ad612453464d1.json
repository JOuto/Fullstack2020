{"ast":null,"code":"var _jsxFileName = \"/Users/jouni/anekdootit/src/index.js\";\nimport React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nconst Anecdote = anecdote => {\n  return /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 5\n    }\n  }, anecdote.text, \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 23\n    }\n  }), \"has \", anecdote.votes, \" votes\");\n};\n\nconst Button = props => {\n  return /*#__PURE__*/React.createElement(\"button\", {\n    onClick: props.handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 10\n    }\n  }, \" \", props.text, \" \");\n};\n\nconst MostVoted = ({\n  votes,\n  anecdotes\n}) => {\n  let returnValue = votes[0];\n  let i = 0;\n\n  for (let index = 0; index <= votes.length; index++) {\n    if (votes[index] > returnValue) {\n      returnValue = votes[index];\n      i = index;\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, anecdotes[i], \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 24\n    }\n  }), \"has \", returnValue, \" votes\"));\n};\n\nconst App = props => {\n  const [selected, setSelected] = useState(0);\n  const [anecdotes, setAnecdotes] = useState(anecdoteObjectArray);\n\n  const handleSelection = index => {\n    setSelected(index);\n  };\n\n  const handleVoting = index => {\n    const copy = { ...anecdotes\n    };\n    copy[index] += 1;\n    setAnecdotes(copy);\n  };\n\n  const selectRandomAnecdote = () => {\n    const randomIndex = Math.floor(Math.random() * anecdotes.length);\n    setSelected(randomIndex);\n  };\n\n  const selectedAnecdote = anecdotes.find(anecdote => anecdote.id === selected);\n  const mostVotedAnecdote = anecdotes.sort((a, b) => a.votes - b.votes)[0];\n  console.log(anecdoteObjectArray);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, \"Anecdote of the day\"), /*#__PURE__*/React.createElement(Anecdote, {\n    anecdote: selectedAnecdote,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, \"Anecdote with most votes\"), /*#__PURE__*/React.createElement(Anecdote, {\n    anecdotes: mostVotedAnecdote,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }));\n};\n\nconst anecdotes2 = [\"If it hurts, do it more often\", \"Adding manpower to a late software project makes it later!\", \"The first 90 percent of the code accounts for the first 90 percent of the development time...The remaining 10 percent of the code accounts for the other 90 percent of the development time.\", \"Any fool can write code that a computer can understand. Good programmers write code that humans can understand.\", \"Premature optimization is the root of all evil.\", \"Debugging is twice as hard as writing the code in the first place. Therefore, if you write the code as cleverly as possible, you are, by definition, not smart enough to debug it.\"];\nconst anecdoteObjectArray = anecdotes2.map((anecdote, index) => ({\n  id: index,\n  text: anecdote,\n  votes: 0\n}));\nconst adenctodeDbObjet = anecdotes2.reduce((acc, curr, idx) => {\n  acc[idx] = curr;\n  return acc;\n}, {});\nReactDOM.render( /*#__PURE__*/React.createElement(App, {\n  anecdotes: anecdoteObjectArray,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 3\n  }\n}), document.getElementById(\"root\"));","map":{"version":3,"sources":["/Users/jouni/anekdootit/src/index.js"],"names":["React","useState","ReactDOM","Anecdote","anecdote","text","votes","Button","props","handleClick","MostVoted","anecdotes","returnValue","i","index","length","App","selected","setSelected","setAnecdotes","anecdoteObjectArray","handleSelection","handleVoting","copy","selectRandomAnecdote","randomIndex","Math","floor","random","selectedAnecdote","find","id","mostVotedAnecdote","sort","a","b","console","log","anecdotes2","map","adenctodeDbObjet","reduce","acc","curr","idx","render","document","getElementById"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nconst Anecdote = (anecdote) => {\n  return (\n    <p>\n      {anecdote.text} <br />\n      has {anecdote.votes} votes\n    </p>\n  );\n};\n\nconst Button = (props) => {\n  return <button onClick={props.handleClick}> {props.text} </button>;\n};\nconst MostVoted = ({ votes, anecdotes }) => {\n  let returnValue = votes[0];\n  let i = 0;\n\n  for (let index = 0; index <= votes.length; index++) {\n    if (votes[index] > returnValue) {\n      returnValue = votes[index];\n      i = index;\n    }\n  }\n\n  return (\n    <div>\n      <p>\n        {anecdotes[i]} <br />\n        has {returnValue} votes\n      </p>\n    </div>\n  );\n};\n\nconst App = (props) => {\n  const [selected, setSelected] = useState(0);\n  const [anecdotes, setAnecdotes] = useState(anecdoteObjectArray);\n\n  const handleSelection = (index) => {\n    setSelected(index);\n  };\n  const handleVoting = (index) => {\n    const copy = { ...anecdotes };\n    copy[index] += 1;\n    setAnecdotes(copy);\n  };\n  const selectRandomAnecdote = () => {\n    const randomIndex = Math.floor(Math.random() * anecdotes.length);\n    setSelected(randomIndex);\n  };\n\n  const selectedAnecdote = anecdotes.find(\n    (anecdote) => anecdote.id === selected\n  );\n  const mostVotedAnecdote = anecdotes.sort((a, b) => a.votes - b.votes)[0];\n\n  console.log(anecdoteObjectArray);\n  return (\n    <div>\n      <h2>Anecdote of the day</h2>\n      <Anecdote anecdote={selectedAnecdote} />\n      {/* <Button text={\"vote\"} handleClick={handleClick2} />\n      <Button text={\"next anecdote\"} handleClick={handleClick} /> */}\n      <h2>Anecdote with most votes</h2>\n      <Anecdote anecdotes={mostVotedAnecdote} />\n    </div>\n  );\n};\n\nconst anecdotes2 = [\n  \"If it hurts, do it more often\",\n  \"Adding manpower to a late software project makes it later!\",\n  \"The first 90 percent of the code accounts for the first 90 percent of the development time...The remaining 10 percent of the code accounts for the other 90 percent of the development time.\",\n  \"Any fool can write code that a computer can understand. Good programmers write code that humans can understand.\",\n  \"Premature optimization is the root of all evil.\",\n  \"Debugging is twice as hard as writing the code in the first place. Therefore, if you write the code as cleverly as possible, you are, by definition, not smart enough to debug it.\",\n];\n\nconst anecdoteObjectArray = anecdotes2.map((anecdote, index) => ({\n  id: index,\n  text: anecdote,\n  votes: 0,\n}));\n\nconst adenctodeDbObjet = anecdotes2.reduce((acc, curr, idx) => {\n  acc[idx] = curr;\n  return acc;\n}, {});\n\nReactDOM.render(\n  <App anecdotes={anecdoteObjectArray} />,\n  document.getElementById(\"root\")\n);\n"]},"metadata":{},"sourceType":"module"}