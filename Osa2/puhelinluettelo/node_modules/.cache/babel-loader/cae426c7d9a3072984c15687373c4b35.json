{"ast":null,"code":"var _jsxFileName = \"/Users/jouni/fullstackopen/Osa2/Puhelinluettelo/src/App.js\";\nimport React from \"react\";\nimport \"./App.css\";\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport { useEffect } from \"react\";\nimport personService from \"./services/persons2\";\nimport Notification from \"./components/Notification\";\nimport AddPerson from \"./components/AddPerson\";\nimport Names from \"./components/Names\";\n/* const Notification = ({ message }) => {\n  if (message === null) {\n    return null;\n  }\n  if (message.includes(\"removed\")) {\n    return <div className=\"error\">{message}</div>;\n  }\n  return <div className=\"notification\">{message}</div>;\n}; */\n\n/* const Names = ({ names, deleteName }) => {\n  return (\n    <div>\n      {names.name} {names.number}\n      <button onClick={deleteName}>delete</button>\n    </div>\n  );\n}; */\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState(\"\");\n  const [newNumber, setNewNumber] = useState(\"\");\n  const [searchInput, setSearchInput] = useState(\"\");\n  const [notification, setNotification] = useState(null);\n  const [nameListRender, setNameListRender] = useState();\n  useEffect(() => {\n    console.log(\"effect\");\n    personService.getAll().then(response => {\n      setPersons(response.data);\n    });\n  }, [nameListRender]);\n  console.log(\"render\", persons.length, \"notes\");\n\n  const addPerson = event => {\n    event.preventDefault();\n\n    if (!persons.some(p => p.name === newName)) {\n      console.log(\"button clicked\", event.target);\n      const nameObject = {\n        name: newName,\n        number: newNumber\n      };\n      personService.create(nameObject).then(response => {\n        setPersons(persons.concat(response.data));\n        setNotification(`Added ${newName} `);\n        setTimeout(() => {\n          setNotification(null);\n        }, 5000);\n        setNewName(\"\");\n        setNewNumber(\"\");\n      });\n    }\n\n    if (persons.some(p => p.name === newName)) {\n      if (window.confirm(`${newName} has already added to phonebook. You wanna replace old number?`)) {\n        const nameObject = {\n          name: newName,\n          number: newNumber\n        };\n        const nameToReplace = persons.filter(name => name.name.includes(newName));\n        axios.put(\"http://localhost:3001/persons/\" + nameToReplace[0].id, nameObject).then(response => console.log(response.data)).catch(error => {\n          setNotification(`Note '${nameToReplace[0].name}' was already removed from server`);\n          setTimeout(() => {\n            setNotification(null);\n          }, 5000);\n        });\n      }\n\n      setNotification(`${newName}Â´s number updated`);\n      setTimeout(() => {\n        setNotification(null);\n      }, 5000);\n      setNewName(\"\");\n      setNewNumber(\"\");\n      setNameListRender(namesToShow);\n    }\n  };\n\n  const handleNameChange = event => {\n    console.log(event.target.value);\n    setNewName(event.target.value);\n  };\n\n  const handleNumberChange = event => {\n    console.log(event.target.value);\n    setNewNumber(event.target.value);\n  };\n\n  const handleNameSearch = event => {\n    setSearchInput(event.target.value);\n  };\n\n  const namesToShow = persons.filter(p => p.name.includes(searchInput));\n\n  const deleteName = name => () => {\n    axios.delete(\"http://localhost:3001/api/persons/\" + name.id).then(response => {\n      console.log(response.data);\n      setNameListRender(namesToShow);\n      setNotification(`${name.name} deleted `);\n      setTimeout(() => {\n        setNotification(null);\n      }, 5000);\n    }).catch(error => {\n      setNotification(`Note '${name.name}' was already removed from server`);\n      setNameListRender(namesToShow);\n      setTimeout(() => {\n        setNotification(null);\n      }, 5000);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }\n  }, \"Phonebook\"), /*#__PURE__*/React.createElement(Notification, {\n    message: notification,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }\n  }), \"search\", /*#__PURE__*/React.createElement(\"input\", {\n    value: searchInput,\n    onChange: handleNameSearch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(AddPerson, {\n    addPerson: addPerson,\n    newName: newName,\n    handleNameChange: handleNameChange,\n    newNumber: newNumber,\n    handleNumberChange: handleNumberChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }\n  }, \"Names\"), namesToShow && namesToShow.map((name, i) => /*#__PURE__*/React.createElement(\"div\", {\n    key: i + name.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Names, {\n    key: i,\n    names: name,\n    deleteName: deleteName(name),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 13\n    }\n  }))));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/jouni/fullstackopen/Osa2/Puhelinluettelo/src/App.js"],"names":["React","useState","axios","useEffect","personService","Notification","AddPerson","Names","App","persons","setPersons","newName","setNewName","newNumber","setNewNumber","searchInput","setSearchInput","notification","setNotification","nameListRender","setNameListRender","console","log","getAll","then","response","data","length","addPerson","event","preventDefault","some","p","name","target","nameObject","number","create","concat","setTimeout","window","confirm","nameToReplace","filter","includes","put","id","catch","error","namesToShow","handleNameChange","value","handleNumberChange","handleNameSearch","deleteName","delete","map","i"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,OAAOC,aAAP,MAA0B,qBAA1B;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AAEA;;;;;;;;;;AAUA;;;;;;;;;AASA,MAAMC,GAAG,GAAG,MAAM;AAChB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACU,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACY,SAAD,EAAYC,YAAZ,IAA4Bb,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACc,WAAD,EAAcC,cAAd,IAAgCf,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACgB,YAAD,EAAeC,eAAf,IAAkCjB,QAAQ,CAAC,IAAD,CAAhD;AACA,QAAM,CAACkB,cAAD,EAAiBC,iBAAjB,IAAsCnB,QAAQ,EAApD;AAEAE,EAAAA,SAAS,CAAC,MAAM;AACdkB,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACAlB,IAAAA,aAAa,CAACmB,MAAd,GAAuBC,IAAvB,CAA6BC,QAAD,IAAc;AACxCf,MAAAA,UAAU,CAACe,QAAQ,CAACC,IAAV,CAAV;AACD,KAFD;AAGD,GALQ,EAKN,CAACP,cAAD,CALM,CAAT;AAMAE,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBb,OAAO,CAACkB,MAA9B,EAAsC,OAAtC;;AAEA,QAAMC,SAAS,GAAIC,KAAD,IAAW;AAC3BA,IAAAA,KAAK,CAACC,cAAN;;AAEA,QAAI,CAACrB,OAAO,CAACsB,IAAR,CAAcC,CAAD,IAAOA,CAAC,CAACC,IAAF,KAAWtB,OAA/B,CAAL,EAA8C;AAC5CU,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BO,KAAK,CAACK,MAApC;AAEA,YAAMC,UAAU,GAAG;AACjBF,QAAAA,IAAI,EAAEtB,OADW;AAEjByB,QAAAA,MAAM,EAAEvB;AAFS,OAAnB;AAKAT,MAAAA,aAAa,CAACiC,MAAd,CAAqBF,UAArB,EAAiCX,IAAjC,CAAuCC,QAAD,IAAc;AAClDf,QAAAA,UAAU,CAACD,OAAO,CAAC6B,MAAR,CAAeb,QAAQ,CAACC,IAAxB,CAAD,CAAV;AAEAR,QAAAA,eAAe,CAAE,SAAQP,OAAQ,GAAlB,CAAf;AACA4B,QAAAA,UAAU,CAAC,MAAM;AACfrB,UAAAA,eAAe,CAAC,IAAD,CAAf;AACD,SAFS,EAEP,IAFO,CAAV;AAGAN,QAAAA,UAAU,CAAC,EAAD,CAAV;AACAE,QAAAA,YAAY,CAAC,EAAD,CAAZ;AACD,OATD;AAUD;;AACD,QAAIL,OAAO,CAACsB,IAAR,CAAcC,CAAD,IAAOA,CAAC,CAACC,IAAF,KAAWtB,OAA/B,CAAJ,EAA6C;AAC3C,UACE6B,MAAM,CAACC,OAAP,CACG,GAAE9B,OAAQ,gEADb,CADF,EAIE;AACA,cAAMwB,UAAU,GAAG;AACjBF,UAAAA,IAAI,EAAEtB,OADW;AAEjByB,UAAAA,MAAM,EAAEvB;AAFS,SAAnB;AAKA,cAAM6B,aAAa,GAAGjC,OAAO,CAACkC,MAAR,CAAgBV,IAAD,IACnCA,IAAI,CAACA,IAAL,CAAUW,QAAV,CAAmBjC,OAAnB,CADoB,CAAtB;AAIAT,QAAAA,KAAK,CACF2C,GADH,CAEI,mCAAmCH,aAAa,CAAC,CAAD,CAAb,CAAiBI,EAFxD,EAGIX,UAHJ,EAKGX,IALH,CAKSC,QAAD,IAAcJ,OAAO,CAACC,GAAR,CAAYG,QAAQ,CAACC,IAArB,CALtB,EAMGqB,KANH,CAMUC,KAAD,IAAW;AAChB9B,UAAAA,eAAe,CACZ,SAAQwB,aAAa,CAAC,CAAD,CAAb,CAAiBT,IAAK,mCADlB,CAAf;AAIAM,UAAAA,UAAU,CAAC,MAAM;AACfrB,YAAAA,eAAe,CAAC,IAAD,CAAf;AACD,WAFS,EAEP,IAFO,CAAV;AAGD,SAdH;AAeD;;AACDA,MAAAA,eAAe,CAAE,GAAEP,OAAQ,mBAAZ,CAAf;AACA4B,MAAAA,UAAU,CAAC,MAAM;AACfrB,QAAAA,eAAe,CAAC,IAAD,CAAf;AACD,OAFS,EAEP,IAFO,CAAV;AAGAN,MAAAA,UAAU,CAAC,EAAD,CAAV;AACAE,MAAAA,YAAY,CAAC,EAAD,CAAZ;AACAM,MAAAA,iBAAiB,CAAC6B,WAAD,CAAjB;AACD;AACF,GA7DD;;AA+DA,QAAMC,gBAAgB,GAAIrB,KAAD,IAAW;AAClCR,IAAAA,OAAO,CAACC,GAAR,CAAYO,KAAK,CAACK,MAAN,CAAaiB,KAAzB;AACAvC,IAAAA,UAAU,CAACiB,KAAK,CAACK,MAAN,CAAaiB,KAAd,CAAV;AACD,GAHD;;AAIA,QAAMC,kBAAkB,GAAIvB,KAAD,IAAW;AACpCR,IAAAA,OAAO,CAACC,GAAR,CAAYO,KAAK,CAACK,MAAN,CAAaiB,KAAzB;AACArC,IAAAA,YAAY,CAACe,KAAK,CAACK,MAAN,CAAaiB,KAAd,CAAZ;AACD,GAHD;;AAKA,QAAME,gBAAgB,GAAIxB,KAAD,IAAW;AAClCb,IAAAA,cAAc,CAACa,KAAK,CAACK,MAAN,CAAaiB,KAAd,CAAd;AACD,GAFD;;AAIA,QAAMF,WAAW,GAAGxC,OAAO,CAACkC,MAAR,CAAgBX,CAAD,IAAOA,CAAC,CAACC,IAAF,CAAOW,QAAP,CAAgB7B,WAAhB,CAAtB,CAApB;;AAEA,QAAMuC,UAAU,GAAIrB,IAAD,IAAU,MAAM;AACjC/B,IAAAA,KAAK,CACFqD,MADH,CACU,uCAAuCtB,IAAI,CAACa,EADtD,EAEGtB,IAFH,CAESC,QAAD,IAAc;AAClBJ,MAAAA,OAAO,CAACC,GAAR,CAAYG,QAAQ,CAACC,IAArB;AACAN,MAAAA,iBAAiB,CAAC6B,WAAD,CAAjB;AACA/B,MAAAA,eAAe,CAAE,GAAEe,IAAI,CAACA,IAAK,WAAd,CAAf;AACAM,MAAAA,UAAU,CAAC,MAAM;AACfrB,QAAAA,eAAe,CAAC,IAAD,CAAf;AACD,OAFS,EAEP,IAFO,CAAV;AAGD,KATH,EAUG6B,KAVH,CAUUC,KAAD,IAAW;AAChB9B,MAAAA,eAAe,CAAE,SAAQe,IAAI,CAACA,IAAK,mCAApB,CAAf;AACAb,MAAAA,iBAAiB,CAAC6B,WAAD,CAAjB;AAEAV,MAAAA,UAAU,CAAC,MAAM;AACfrB,QAAAA,eAAe,CAAC,IAAD,CAAf;AACD,OAFS,EAEP,IAFO,CAAV;AAGD,KAjBH;AAkBD,GAnBD;;AAqBA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,eAEE,oBAAC,YAAD;AAAc,IAAA,OAAO,EAAED,YAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,yBAIE;AAAO,IAAA,KAAK,EAAEF,WAAd;AAA2B,IAAA,QAAQ,EAAEsC,gBAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,eAKE,oBAAC,SAAD;AACE,IAAA,SAAS,EAAEzB,SADb;AAEE,IAAA,OAAO,EAAEjB,OAFX;AAGE,IAAA,gBAAgB,EAAEuC,gBAHpB;AAIE,IAAA,SAAS,EAAErC,SAJb;AAKE,IAAA,kBAAkB,EAAEuC,kBALtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,eAwBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAxBF,EAyBGH,WAAW,IACVA,WAAW,CAACO,GAAZ,CAAgB,CAACvB,IAAD,EAAOwB,CAAP,kBACd;AAAK,IAAA,GAAG,EAAEA,CAAC,GAAGxB,IAAI,CAACA,IAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,GAAG,EAAEwB,CAAZ;AAAe,IAAA,KAAK,EAAExB,IAAtB;AAA4B,IAAA,UAAU,EAAEqB,UAAU,CAACrB,IAAD,CAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CA1BJ,CADF;AAkCD,CArJD;;AAuJA,eAAezB,GAAf","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport { useEffect } from \"react\";\nimport personService from \"./services/persons2\";\nimport Notification from \"./components/Notification\";\nimport AddPerson from \"./components/AddPerson\";\nimport Names from \"./components/Names\";\n\n/* const Notification = ({ message }) => {\n  if (message === null) {\n    return null;\n  }\n  if (message.includes(\"removed\")) {\n    return <div className=\"error\">{message}</div>;\n  }\n  return <div className=\"notification\">{message}</div>;\n}; */\n\n/* const Names = ({ names, deleteName }) => {\n  return (\n    <div>\n      {names.name} {names.number}\n      <button onClick={deleteName}>delete</button>\n    </div>\n  );\n}; */\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState(\"\");\n  const [newNumber, setNewNumber] = useState(\"\");\n  const [searchInput, setSearchInput] = useState(\"\");\n  const [notification, setNotification] = useState(null);\n  const [nameListRender, setNameListRender] = useState();\n\n  useEffect(() => {\n    console.log(\"effect\");\n    personService.getAll().then((response) => {\n      setPersons(response.data);\n    });\n  }, [nameListRender]);\n  console.log(\"render\", persons.length, \"notes\");\n\n  const addPerson = (event) => {\n    event.preventDefault();\n\n    if (!persons.some((p) => p.name === newName)) {\n      console.log(\"button clicked\", event.target);\n\n      const nameObject = {\n        name: newName,\n        number: newNumber,\n      };\n\n      personService.create(nameObject).then((response) => {\n        setPersons(persons.concat(response.data));\n\n        setNotification(`Added ${newName} `);\n        setTimeout(() => {\n          setNotification(null);\n        }, 5000);\n        setNewName(\"\");\n        setNewNumber(\"\");\n      });\n    }\n    if (persons.some((p) => p.name === newName)) {\n      if (\n        window.confirm(\n          `${newName} has already added to phonebook. You wanna replace old number?`\n        )\n      ) {\n        const nameObject = {\n          name: newName,\n          number: newNumber,\n        };\n\n        const nameToReplace = persons.filter((name) =>\n          name.name.includes(newName)\n        );\n\n        axios\n          .put(\n            \"http://localhost:3001/persons/\" + nameToReplace[0].id,\n            nameObject\n          )\n          .then((response) => console.log(response.data))\n          .catch((error) => {\n            setNotification(\n              `Note '${nameToReplace[0].name}' was already removed from server`\n            );\n\n            setTimeout(() => {\n              setNotification(null);\n            }, 5000);\n          });\n      }\n      setNotification(`${newName}Â´s number updated`);\n      setTimeout(() => {\n        setNotification(null);\n      }, 5000);\n      setNewName(\"\");\n      setNewNumber(\"\");\n      setNameListRender(namesToShow);\n    }\n  };\n\n  const handleNameChange = (event) => {\n    console.log(event.target.value);\n    setNewName(event.target.value);\n  };\n  const handleNumberChange = (event) => {\n    console.log(event.target.value);\n    setNewNumber(event.target.value);\n  };\n\n  const handleNameSearch = (event) => {\n    setSearchInput(event.target.value);\n  };\n\n  const namesToShow = persons.filter((p) => p.name.includes(searchInput));\n\n  const deleteName = (name) => () => {\n    axios\n      .delete(\"http://localhost:3001/api/persons/\" + name.id)\n      .then((response) => {\n        console.log(response.data);\n        setNameListRender(namesToShow);\n        setNotification(`${name.name} deleted `);\n        setTimeout(() => {\n          setNotification(null);\n        }, 5000);\n      })\n      .catch((error) => {\n        setNotification(`Note '${name.name}' was already removed from server`);\n        setNameListRender(namesToShow);\n\n        setTimeout(() => {\n          setNotification(null);\n        }, 5000);\n      });\n  };\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={notification} />\n      search\n      <input value={searchInput} onChange={handleNameSearch} />\n      <AddPerson\n        addPerson={addPerson}\n        newName={newName}\n        handleNameChange={handleNameChange}\n        newNumber={newNumber}\n        handleNumberChange={handleNumberChange}\n      />\n      {/* <h2>Add a new</h2>\n      <form onSubmit={addPerson}>\n        <div>\n          name: <input value={newName} onChange={handleNameChange} />\n        </div>\n        <div>\n          number: <input value={newNumber} onChange={handleNumberChange} />\n        </div>\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n      </form> */}\n      <h2>Names</h2>\n      {namesToShow &&\n        namesToShow.map((name, i) => (\n          <div key={i + name.name}>\n            <Names key={i} names={name} deleteName={deleteName(name)} />\n          </div>\n        ))}\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}